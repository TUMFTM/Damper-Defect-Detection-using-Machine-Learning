function [opts] = setOptions(varargin)
%SETOPTIONS Summary of this function goes here
%   Detailed explanation goes here

    if find(strcmp(varargin,'dataSource'))
        opts.dataSource = varargin{find(strcmp(varargin,'dataSource'))+1};
    else
        opts.dataSource = 'Flexray';
    end

    if find(strcmp(varargin,'additionalSensors'))
        opts.additionalSensors = varargin{find(strcmp(varargin,'additionalSensors'))+1};
    else
        opts.additionalSensors = 0;
    end
    
    % Set dataSource to CAN for DD-dataset
    if evalin('caller', "exist('filename','var')")
        if evalin('caller', "strcmp(filename,'Label_DD.xlsx')")
            opts.dataSource = 'CAN';
        end
    end
    
    %% Parameters
    opts.data = struct('ACC_X',[],'ACC_Y',[],'YAW_RATE',[],...
        'SPEED_FL',[],'SPEED_FR',[],'SPEED_RL',[],'SPEED_RR',[],...
        'Prop',[]);

    % opts.sensor_names = {possible names of sensor signal, desired name for scripts
    % this variable can have more entries than actually needed for opts.data
    if strcmp(opts.dataSource, 'Flexray')
        % Flexray
        opts.sensor_names = {'A_FlexRay__ACLNX_MASSCNTR__ACLNX_COG','ACC_X';...
            'A_FlexRay__ACLNY_MASSCNTR__ACLNY_COG','ACC_Y';...
            'A_FlexRay__VYAW_VEH__VYAW_VEH','YAW_RATE';...
            'A_FlexRay__AVL_RPM_WHL__AVL_RPM_WHL_FLH','SPEED_FL';...
            'A_FlexRay__AVL_RPM_WHL__AVL_RPM_WHL_FRH','SPEED_FR';...
            'A_FlexRay__AVL_RPM_WHL__AVL_RPM_WHL_RLH','SPEED_RL';...
            'A_FlexRay__AVL_RPM_WHL__AVL_RPM_WHL_RRH','SPEED_RR';...
            'AVL_STEA_DV','STEERING_WHEEL_ANGLE';...
            'STEA_FTAX_EFFV','STEERING_ANGLE';...
            'ATTA_ESTI','SIDESLIP_ANGLE';...
            'ST_LAT_NAVI', 'GPS_LAT';...
            'ST_LONG_NAVI', 'GPS_LONG';...
            'ST_HDG_HRZTL_ABSL', 'GPS_HEADING';...
            'FCAN__A_TEMP__TEMP_EX', 'TEMP';...
            'FCAN__UHRZEIT_DATUM__DISP_DATE_YR','TIME_YEAR';...
            'FCAN__UHRZEIT_DATUM__DISP_DATE_MON','TIME_MONTH';...
            'FCAN__UHRZEIT_DATUM__DISP_DATE_DAY','TIME_DAY';...
            'FCAN__UHRZEIT_DATUM__DISP_HR','TIME_HOUR';...
            'FCAN__UHRZEIT_DATUM__DISP_MN','TIME_MIN';...
            'FCAN__UHRZEIT_DATUM__DISP_SEC','TIME_SEC'};
                
    elseif strcmp(opts.dataSource, 'CAN')
        % CAN
        opts.sensor_names = {'ACLNX_COG','ACC_X';...
            'ACLNY_COG','ACC_Y';...
            'VYAW_VEH','YAW_RATE';...
            'AVL_RPM_WHL_FLH','SPEED_FL';...
            'AVL_RPM_WHL_FRH','SPEED_FR';...
            'AVL_RPM_WHL_RLH','SPEED_RL';...
            'AVL_RPM_WHL_RRH','SPEED_RR';...
            'AVL_STEA_DV','STEERING_WHEEL_ANGLE';...
            'STEA_FTAX_EFFV','STEERING_ANGLE';...
            'ATTA_ESTI','SIDESLIP_ANGLE';...
            'ST_LAT_NAVI', 'GPS_LAT';...
            'ST_LONG_NAVI', 'GPS_LONG';...
            'ST_HDG_HRZTL_ABSL', 'GPS_HEADING';...
            'DISP_DATE_YR','TIME_YEAR';...
            'DISP_DATE_MON','TIME_MONTH';...
            'DISP_DATE_DAY','TIME_DAY';...
            'DISP_HR','TIME_HOUR';...
            'DISP_MN','TIME_MIN';...
            'DISP_SEC','TIME_SEC'};
    end

    % Define data that is extracted for the Prop-field
    opts.propData = struct('TIME_YEAR',[],'TIME_MONTH',[],'TIME_DAY',[],...
        'TIME_HOUR',[],'TIME_MIN',[],'TIME_SEC',[],...
        'GPS_LAT',[],'GPS_LONG',[],'GPS_HEADING',[],'TEMP',[]);
    
    opts.useParallel = 1;   % 0 = run serial, 1 = run parallel
    opts.fs = 100;           % Sampling frequency [Hz]
    % opts.t = 5;             % Analysis block time [s] resulting from number of data points
    opts.t = 512/opts.fs;    % Analysis block time [s] resulting from number of data points
    opts.overlap = 0;       % let windows overlap by given amount of datapoints for data augmentation
    opts.min_speed = 30;     % Speed threshold [km/h]
    opts.max_acc_x = 1;      % Acceleration_x threshold [m/s^2]
    opts.max_acc_y = 1;      % Acceleration_y threshold [m/s^2]
    opts.useLabel = 'labelIsolation';   % specify name of used label according to Excel table
    opts.d_wheel = 0.635;        % wird f�r Umrechung Raddrehzahl -> Geschwindigkeit ben�tigt
    opts.splitTrainingData = 0.8;        % percentage of data kept for training, rest for test

    if strcmp(opts.dataSource, 'CAN')
        opts.fs = 50;           % Sampling frequency [Hz] 50 Hz for DD dataset
        opts.t = 256/opts.fs;    % Analysis block time [s] resulting from number of data points
    end
    
    % identify default number of parallel workers
    defaultProfile = parallel.defaultClusterProfile;
    parallelCluster = parcluster(defaultProfile);
    opts.numParallelWorkers = parallelCluster.NumWorkers;
    % opts.numParallelWorkers = 64;

    opts.fieldsData = fields(opts.data);
    opts.fieldsData = opts.fieldsData(~contains(opts.fieldsData,'Prop'));   % remove 'Prop' from fieldsData variable
    opts.n_sensors = length(opts.fieldsData);
    
    opts.detrend = 1;
    opts.detrend_mode = 'movmean'; % 'const', 'linear', 'standardize', 'movmean'
    
    if find(strcmp(varargin,'fs'))
        opts.fs = varargin{find(strcmp(varargin,'fs'))+1};
    end
    if find(strcmp(varargin,'t'))
        opts.t = varargin{find(strcmp(varargin,'t'))+1};
    end

end


function [classificationEnsemble] = trainEnsembleTree(datastructTraining, classifierOpts, varargin)
% [trainedClassifier, validationAccuracy] = trainClassifier(trainingData)
% returns a trained classifier and its accuracy. This code recreates the
% classification model trained in Classification Learner app. Use the
% generated code to automate training the same model with new data, or to
% learn how to programmatically train models.
%
%  Input:
%      trainingData: a table containing the same predictor and response
%       columns as imported into the app.
%
%  Output:
%      trainedClassifier: a struct containing the trained classifier. The
%       struct contains various fields with information about the trained
%       classifier.
%
%      trainedClassifier.predictFcn: a function to make predictions on new
%       data.
%
%      validationAccuracy: a double containing the accuracy in percent. In
%       the app, the History list displays this overall accuracy score for
%       each model.
%
% Use the code to train the model with new data. To retrain your
% classifier, call the function from the command line with your original
% data or new data as the input argument trainingData.
%
% For example, to retrain a classifier trained with the original data set
% T, enter:
%   [trainedClassifier, validationAccuracy] = trainClassifier(T)
%
% To make predictions with the returned 'trainedClassifier' on new data T2,
% use
%   yfit = trainedClassifier.predictFcn(T2)
%
% T2 must be a table containing at least the same predictor columns as used
% during training. For details, enter:
%   trainedClassifier.HowToPredict

% Auto-generated by MATLAB on 19-Jul-2019 16:34:34

    if find(strcmp(varargin,'TextOutput'))
        TextOutput = varargin{find(strcmp(varargin,'TextOutput'))+1};
    else
        TextOutput = 1;
    end

    % Convert input data to desired table format if it is a struct
    if isstruct(datastructTraining)
        response = datastructTraining.Prop.labelIsolation;
    %         response = datastructTraining.Label;
    %         dataTraining = datastructTraining.data;
    else
        try
            response = datastructTraining.Label;
        catch
            response = datastructTraining.Label_ISOLATION;
        end
    end

    if find(strcmp(varargin,'selectedFeatures'))
        predictorNames = varargin{find(strcmp(varargin,'selectedFeatures'))+1};
    else
        predictorNames = datastructTraining.data.Properties.VariableNames';
    end
    
    if ~isfield(classifierOpts, 'ClassNames')
        classNames = unique(response);
    else
        classNames = classifierOpts.ClassNames;
    end

    % Create Partition for Holdout Validation
    if classifierOpts.validation <= 1
        cvPartition = cvpartition(response,'HoldOut',(1-classifierOpts.validation));
    else
        cvPartition = cvpartition(response,'kFold',classifierOpts.validation);
    end

    % Train a classifier
    if TextOutput
        fprintf('Classifier training...');
        tic
    end


% Extract predictors and response
% This code processes the data into the right shape for training the
% model.
% inputTable = trainingData;
% predictorNames = {'FuncStdv_ACC_X_1', 'FuncStdv_ACC_Y_1', 'FuncStdv_YAW_RATE_1', 'FuncStdv_SPEED_FL_1', 'FuncStdv_SPEED_FR_1', 'FuncStdv_SPEED_RL_1', 'FuncStdv_SPEED_RR_1', 'FuncARfit_ACC_X_1', 'FuncARfit_ACC_X_2', 'FuncARfit_ACC_X_3', 'FuncARfit_ACC_X_4', 'FuncARfit_ACC_X_5', 'FuncARfit_ACC_X_6', 'FuncARfit_ACC_X_7', 'FuncARfit_ACC_X_8', 'FuncARfit_ACC_X_9', 'FuncARfit_ACC_X_10', 'FuncARfit_ACC_X_11', 'FuncARfit_ACC_Y_1', 'FuncARfit_ACC_Y_2', 'FuncARfit_ACC_Y_3', 'FuncARfit_ACC_Y_4', 'FuncARfit_ACC_Y_5', 'FuncARfit_ACC_Y_6', 'FuncARfit_ACC_Y_7', 'FuncARfit_ACC_Y_8', 'FuncARfit_ACC_Y_9', 'FuncARfit_ACC_Y_10', 'FuncARfit_ACC_Y_11', 'FuncARfit_YAW_RATE_1', 'FuncARfit_YAW_RATE_2', 'FuncARfit_YAW_RATE_3', 'FuncARfit_YAW_RATE_4', 'FuncARfit_YAW_RATE_5', 'FuncARfit_YAW_RATE_6', 'FuncARfit_YAW_RATE_7', 'FuncARfit_YAW_RATE_8', 'FuncARfit_YAW_RATE_9', 'FuncARfit_YAW_RATE_10', 'FuncARfit_YAW_RATE_11', 'FuncARfit_SPEED_FL_1', 'FuncARfit_SPEED_FL_2', 'FuncARfit_SPEED_FL_3', 'FuncARfit_SPEED_FL_4', 'FuncARfit_SPEED_FL_5', 'FuncARfit_SPEED_FL_6', 'FuncARfit_SPEED_FL_7', 'FuncARfit_SPEED_FL_8', 'FuncARfit_SPEED_FL_9', 'FuncARfit_SPEED_FL_10', 'FuncARfit_SPEED_FL_11', 'FuncARfit_SPEED_FR_1', 'FuncARfit_SPEED_FR_2', 'FuncARfit_SPEED_FR_3', 'FuncARfit_SPEED_FR_4', 'FuncARfit_SPEED_FR_5', 'FuncARfit_SPEED_FR_6', 'FuncARfit_SPEED_FR_7', 'FuncARfit_SPEED_FR_8', 'FuncARfit_SPEED_FR_9', 'FuncARfit_SPEED_FR_10', 'FuncARfit_SPEED_FR_11', 'FuncARfit_SPEED_RL_1', 'FuncARfit_SPEED_RL_2', 'FuncARfit_SPEED_RL_3', 'FuncARfit_SPEED_RL_4', 'FuncARfit_SPEED_RL_5', 'FuncARfit_SPEED_RL_6', 'FuncARfit_SPEED_RL_7', 'FuncARfit_SPEED_RL_8', 'FuncARfit_SPEED_RL_9', 'FuncARfit_SPEED_RL_10', 'FuncARfit_SPEED_RL_11', 'FuncARfit_SPEED_RR_1', 'FuncARfit_SPEED_RR_2', 'FuncARfit_SPEED_RR_3', 'FuncARfit_SPEED_RR_4', 'FuncARfit_SPEED_RR_5', 'FuncARfit_SPEED_RR_6', 'FuncARfit_SPEED_RR_7', 'FuncARfit_SPEED_RR_8', 'FuncARfit_SPEED_RR_9', 'FuncARfit_SPEED_RR_10', 'FuncARfit_SPEED_RR_11', 'FuncAbsEnergyTime_ACC_X_1', 'FuncAbsEnergyTime_ACC_Y_1', 'FuncAbsEnergyTime_YAW_RATE_1', 'FuncAbsEnergyTime_SPEED_FL_1', 'FuncAbsEnergyTime_SPEED_FR_1', 'FuncAbsEnergyTime_SPEED_RL_1', 'FuncAbsEnergyTime_SPEED_RR_1', 'FuncSkewness_ACC_X_1', 'FuncSkewness_ACC_Y_1', 'FuncSkewness_YAW_RATE_1', 'FuncSkewness_SPEED_FL_1', 'FuncSkewness_SPEED_FR_1', 'FuncSkewness_SPEED_RL_1', 'FuncSkewness_SPEED_RR_1', 'FuncCov_peak_ACC_X_1', 'FuncCov_peak_ACC_Y_1', 'FuncCov_peak_YAW_RATE_1', 'FuncCov_peak_SPEED_FL_1', 'FuncCov_peak_SPEED_FR_1', 'FuncCov_peak_SPEED_RL_1', 'FuncCov_peak_SPEED_RR_1', 'FuncCov_loc_ACC_X_1', 'FuncCov_loc_ACC_Y_1', 'FuncCov_loc_YAW_RATE_1', 'FuncCov_loc_SPEED_FL_1', 'FuncCov_loc_SPEED_FR_1', 'FuncCov_loc_SPEED_RL_1', 'FuncCov_loc_SPEED_RR_1', 'FuncCovPower_ACC_X_1', 'FuncCovPower_ACC_Y_1', 'FuncCovPower_YAW_RATE_1', 'FuncCovPower_SPEED_FL_1', 'FuncCovPower_SPEED_FR_1', 'FuncCovPower_SPEED_RL_1', 'FuncCovPower_SPEED_RR_1', 'FuncDiscrPower_ACC_X_1', 'FuncDiscrPower_ACC_Y_1', 'FuncDiscrPower_YAW_RATE_1', 'FuncDiscrPower_SPEED_FL_1', 'FuncDiscrPower_SPEED_FR_1', 'FuncDiscrPower_SPEED_RL_1', 'FuncDiscrPower_SPEED_RR_1', 'FuncEigFilter_peak_ACC_X_1', 'FuncEigFilter_peak_ACC_Y_1', 'FuncEigFilter_peak_YAW_RATE_1', 'FuncEigFilter_peak_SPEED_FL_1', 'FuncEigFilter_peak_SPEED_FR_1', 'FuncEigFilter_peak_SPEED_RL_1', 'FuncEigFilter_peak_SPEED_RR_1', 'FuncEigFilter_loc_ACC_X_1', 'FuncEigFilter_loc_ACC_Y_1', 'FuncEigFilter_loc_YAW_RATE_1', 'FuncEigFilter_loc_SPEED_FL_1', 'FuncEigFilter_loc_SPEED_FR_1', 'FuncEigFilter_loc_SPEED_RL_1', 'FuncEigFilter_loc_SPEED_RR_1', 'FuncEigFilter2_peak_ACC_X_1', 'FuncEigFilter2_peak_ACC_Y_1', 'FuncEigFilter2_peak_YAW_RATE_1', 'FuncEigFilter2_peak_SPEED_FL_1', 'FuncEigFilter2_peak_SPEED_FR_1', 'FuncEigFilter2_peak_SPEED_RL_1', 'FuncEigFilter2_peak_SPEED_RR_1', 'FuncEigFilter2_loc_ACC_X_1', 'FuncEigFilter2_loc_ACC_Y_1', 'FuncEigFilter2_loc_YAW_RATE_1', 'FuncEigFilter2_loc_SPEED_FL_1', 'FuncEigFilter2_loc_SPEED_FR_1', 'FuncEigFilter2_loc_SPEED_RL_1', 'FuncEigFilter2_loc_SPEED_RR_1', 'FuncEigNorm_ACC_X_1', 'FuncEigNorm_ACC_Y_1', 'FuncEigNorm_YAW_RATE_1', 'FuncEigNorm_SPEED_FL_1', 'FuncEigNorm_SPEED_FR_1', 'FuncEigNorm_SPEED_RL_1', 'FuncEigNorm_SPEED_RR_1', 'FuncAbsSumChanges_ACC_X_1', 'FuncAbsSumChanges_ACC_Y_1', 'FuncAbsSumChanges_YAW_RATE_1', 'FuncAbsSumChanges_SPEED_FL_1', 'FuncAbsSumChanges_SPEED_FR_1', 'FuncAbsSumChanges_SPEED_RL_1', 'FuncAbsSumChanges_SPEED_RR_1', 'FuncCorCoeff_ACC_X_ACC_Y_1', 'FuncCorCoeff_ACC_X_YAW_RATE_1', 'FuncCorCoeff_ACC_X_SPEED_FL_1', 'FuncCorCoeff_ACC_X_SPEED_FR_1', 'FuncCorCoeff_ACC_X_SPEED_RL_1', 'FuncCorCoeff_ACC_X_SPEED_RR_1', 'FuncCorCoeff_ACC_Y_YAW_RATE_1', 'FuncCorCoeff_ACC_Y_SPEED_FL_1', 'FuncCorCoeff_ACC_Y_SPEED_FR_1', 'FuncCorCoeff_ACC_Y_SPEED_RL_1', 'FuncCorCoeff_ACC_Y_SPEED_RR_1', 'FuncCorCoeff_YAW_RATE_SPEED_FL_1', 'FuncCorCoeff_YAW_RATE_SPEED_FR_1', 'FuncCorCoeff_YAW_RATE_SPEED_RL_1', 'FuncCorCoeff_YAW_RATE_SPEED_RR_1', 'FuncCorCoeff_SPEED_FL_SPEED_FR_1', 'FuncCorCoeff_SPEED_FL_SPEED_RL_1', 'FuncCorCoeff_SPEED_FL_SPEED_RR_1', 'FuncCorCoeff_SPEED_FR_SPEED_RL_1', 'FuncCorCoeff_SPEED_FR_SPEED_RR_1', 'FuncCorCoeff_SPEED_RL_SPEED_RR_1', 'FuncCrest_ACC_X_1', 'FuncCrest_ACC_Y_1', 'FuncCrest_YAW_RATE_1', 'FuncCrest_SPEED_FL_1', 'FuncCrest_SPEED_FR_1', 'FuncCrest_SPEED_RL_1', 'FuncCrest_SPEED_RR_1', 'FuncNorm_ACC_X_1', 'FuncNorm_ACC_Y_1', 'FuncNorm_YAW_RATE_1', 'FuncNorm_SPEED_FL_1', 'FuncNorm_SPEED_FR_1', 'FuncNorm_SPEED_RL_1', 'FuncNorm_SPEED_RR_1', 'FuncRange_ACC_X_1', 'FuncRange_ACC_Y_1', 'FuncRange_YAW_RATE_1', 'FuncRange_SPEED_FL_1', 'FuncRange_SPEED_FR_1', 'FuncRange_SPEED_RL_1', 'FuncRange_SPEED_RR_1', 'FuncComplTimeSeries_ACC_X_1', 'FuncComplTimeSeries_ACC_Y_1', 'FuncComplTimeSeries_YAW_RATE_1', 'FuncComplTimeSeries_SPEED_FL_1', 'FuncComplTimeSeries_SPEED_FR_1', 'FuncComplTimeSeries_SPEED_RL_1', 'FuncComplTimeSeries_SPEED_RR_1', 'FuncSVD_raw_1', 'FuncSVD_raw_2', 'FuncSVD_raw_3', 'FuncSVD_raw_4', 'FuncSVD_raw_5', 'FuncSVD_raw_6', 'FuncSVD_raw_7', 'FuncSVD_norm_1', 'FuncSVD_norm_2', 'FuncSVD_norm_3', 'FuncSVD_norm_4', 'FuncSVD_norm_5', 'FuncSVD_norm_6', 'FuncSVD_norm_7', 'FuncSampEntr_ACC_X_1', 'FuncSampEntr_ACC_Y_1', 'FuncSampEntr_YAW_RATE_1', 'FuncSampEntr_SPEED_FL_1', 'FuncSampEntr_SPEED_FR_1', 'FuncSampEntr_SPEED_RL_1', 'FuncSampEntr_SPEED_RR_1', 'FuncLogEnEntr_ACC_X_1', 'FuncLogEnEntr_ACC_Y_1', 'FuncLogEnEntr_YAW_RATE_1', 'FuncLogEnEntr_SPEED_FL_1', 'FuncLogEnEntr_SPEED_FR_1', 'FuncLogEnEntr_SPEED_RL_1', 'FuncLogEnEntr_SPEED_RR_1', 'FuncMeanFreq_ACC_X_1', 'FuncMeanFreq_ACC_Y_1', 'FuncMeanFreq_YAW_RATE_1', 'FuncMeanFreq_SPEED_FL_1', 'FuncMeanFreq_SPEED_FR_1', 'FuncMeanFreq_SPEED_RL_1', 'FuncMeanFreq_SPEED_RR_1', 'FuncBandpower_1_5_ACC_X_1', 'FuncBandpower_1_5_ACC_Y_1', 'FuncBandpower_1_5_YAW_RATE_1', 'FuncBandpower_1_5_SPEED_FL_1', 'FuncBandpower_1_5_SPEED_FR_1', 'FuncBandpower_1_5_SPEED_RL_1', 'FuncBandpower_1_5_SPEED_RR_1', 'FuncBandpower_5_10_ACC_X_1', 'FuncBandpower_5_10_ACC_Y_1', 'FuncBandpower_5_10_YAW_RATE_1', 'FuncBandpower_5_10_SPEED_FL_1', 'FuncBandpower_5_10_SPEED_FR_1', 'FuncBandpower_5_10_SPEED_RL_1', 'FuncBandpower_5_10_SPEED_RR_1', 'FuncBandpower_10_15_ACC_X_1', 'FuncBandpower_10_15_ACC_Y_1', 'FuncBandpower_10_15_YAW_RATE_1', 'FuncBandpower_10_15_SPEED_FL_1', 'FuncBandpower_10_15_SPEED_FR_1', 'FuncBandpower_10_15_SPEED_RL_1', 'FuncBandpower_10_15_SPEED_RR_1', 'FuncBandpower_15_20_ACC_X_1', 'FuncBandpower_15_20_ACC_Y_1', 'FuncBandpower_15_20_YAW_RATE_1', 'FuncBandpower_15_20_SPEED_FL_1', 'FuncBandpower_15_20_SPEED_FR_1', 'FuncBandpower_15_20_SPEED_RL_1', 'FuncBandpower_15_20_SPEED_RR_1', 'FuncBandpower_20_25_ACC_X_1', 'FuncBandpower_20_25_ACC_Y_1', 'FuncBandpower_20_25_YAW_RATE_1', 'FuncBandpower_20_25_SPEED_FL_1', 'FuncBandpower_20_25_SPEED_FR_1', 'FuncBandpower_20_25_SPEED_RL_1', 'FuncBandpower_20_25_SPEED_RR_1'};
% predictors = inputTable(:, predictorNames);
% response = inputTable.Label;
% isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];

% Train a classifier
% This code specifies all the classifier options and trains the classifier.

if length(classNames) > 2
    if ~isfield(classifierOpts, 'Method')
        classifierOpts.Method = 'AdaBoostM2';
    end
else
    classifierOpts.Method = 'AdaBoostM1';
end

if ~isfield(classifierOpts, 'NumLearningCycles')
    classifierOpts.NumLearningCycles = 30;
end

if ~isfield(classifierOpts, 'LearnRate')
    classifierOpts.LearnRate = 0.1;
end

tic;
classificationEnsemble = fitcensemble(...
    datastructTraining.data, ...
    response, ...
    'PredictorNames', predictorNames, ...
    'Method', classifierOpts.Method, ...
    'NumLearningCycles', classifierOpts.NumLearningCycles, ...
    'Learners', classifierOpts.template, ...
    'LearnRate', classifierOpts.LearnRate, ...
    'ClassNames', classNames,...
    'OptimizeHyperparameters', classifierOpts.optimizeHyperparameters,...
    'HyperparameterOptimizationOptions',...
    struct('Optimizer','bayesopt',...
    'Verbose', 1,...
    'UseParallel',true,...
    'MaxObjectiveEvaluations',100,...
    'CVPartition', cvPartition,...
    'Repartition', false,...
    'AcquisitionFunctionName','expected-improvement-plus'));
toc
%     'Options',statset('UseParallel',true),...

% % Create the result struct with predict function
% predictorExtractionFcn = @(t) t(:, predictorNames);
% ensemblePredictFcn = @(x) predict(classificationEnsemble, x);
% trainedClassifier.predictFcn = @(x) ensemblePredictFcn(predictorExtractionFcn(x));
% 
% % Add additional fields to the result struct
% trainedClassifier.RequiredVariables = {'FuncStdv_ACC_X_1', 'FuncStdv_ACC_Y_1', 'FuncStdv_YAW_RATE_1', 'FuncStdv_SPEED_FL_1', 'FuncStdv_SPEED_FR_1', 'FuncStdv_SPEED_RL_1', 'FuncStdv_SPEED_RR_1', 'FuncARfit_ACC_X_1', 'FuncARfit_ACC_X_2', 'FuncARfit_ACC_X_3', 'FuncARfit_ACC_X_4', 'FuncARfit_ACC_X_5', 'FuncARfit_ACC_X_6', 'FuncARfit_ACC_X_7', 'FuncARfit_ACC_X_8', 'FuncARfit_ACC_X_9', 'FuncARfit_ACC_X_10', 'FuncARfit_ACC_X_11', 'FuncARfit_ACC_Y_1', 'FuncARfit_ACC_Y_2', 'FuncARfit_ACC_Y_3', 'FuncARfit_ACC_Y_4', 'FuncARfit_ACC_Y_5', 'FuncARfit_ACC_Y_6', 'FuncARfit_ACC_Y_7', 'FuncARfit_ACC_Y_8', 'FuncARfit_ACC_Y_9', 'FuncARfit_ACC_Y_10', 'FuncARfit_ACC_Y_11', 'FuncARfit_YAW_RATE_1', 'FuncARfit_YAW_RATE_2', 'FuncARfit_YAW_RATE_3', 'FuncARfit_YAW_RATE_4', 'FuncARfit_YAW_RATE_5', 'FuncARfit_YAW_RATE_6', 'FuncARfit_YAW_RATE_7', 'FuncARfit_YAW_RATE_8', 'FuncARfit_YAW_RATE_9', 'FuncARfit_YAW_RATE_10', 'FuncARfit_YAW_RATE_11', 'FuncARfit_SPEED_FL_1', 'FuncARfit_SPEED_FL_2', 'FuncARfit_SPEED_FL_3', 'FuncARfit_SPEED_FL_4', 'FuncARfit_SPEED_FL_5', 'FuncARfit_SPEED_FL_6', 'FuncARfit_SPEED_FL_7', 'FuncARfit_SPEED_FL_8', 'FuncARfit_SPEED_FL_9', 'FuncARfit_SPEED_FL_10', 'FuncARfit_SPEED_FL_11', 'FuncARfit_SPEED_FR_1', 'FuncARfit_SPEED_FR_2', 'FuncARfit_SPEED_FR_3', 'FuncARfit_SPEED_FR_4', 'FuncARfit_SPEED_FR_5', 'FuncARfit_SPEED_FR_6', 'FuncARfit_SPEED_FR_7', 'FuncARfit_SPEED_FR_8', 'FuncARfit_SPEED_FR_9', 'FuncARfit_SPEED_FR_10', 'FuncARfit_SPEED_FR_11', 'FuncARfit_SPEED_RL_1', 'FuncARfit_SPEED_RL_2', 'FuncARfit_SPEED_RL_3', 'FuncARfit_SPEED_RL_4', 'FuncARfit_SPEED_RL_5', 'FuncARfit_SPEED_RL_6', 'FuncARfit_SPEED_RL_7', 'FuncARfit_SPEED_RL_8', 'FuncARfit_SPEED_RL_9', 'FuncARfit_SPEED_RL_10', 'FuncARfit_SPEED_RL_11', 'FuncARfit_SPEED_RR_1', 'FuncARfit_SPEED_RR_2', 'FuncARfit_SPEED_RR_3', 'FuncARfit_SPEED_RR_4', 'FuncARfit_SPEED_RR_5', 'FuncARfit_SPEED_RR_6', 'FuncARfit_SPEED_RR_7', 'FuncARfit_SPEED_RR_8', 'FuncARfit_SPEED_RR_9', 'FuncARfit_SPEED_RR_10', 'FuncARfit_SPEED_RR_11', 'FuncAbsEnergyTime_ACC_X_1', 'FuncAbsEnergyTime_ACC_Y_1', 'FuncAbsEnergyTime_YAW_RATE_1', 'FuncAbsEnergyTime_SPEED_FL_1', 'FuncAbsEnergyTime_SPEED_FR_1', 'FuncAbsEnergyTime_SPEED_RL_1', 'FuncAbsEnergyTime_SPEED_RR_1', 'FuncSkewness_ACC_X_1', 'FuncSkewness_ACC_Y_1', 'FuncSkewness_YAW_RATE_1', 'FuncSkewness_SPEED_FL_1', 'FuncSkewness_SPEED_FR_1', 'FuncSkewness_SPEED_RL_1', 'FuncSkewness_SPEED_RR_1', 'FuncCov_peak_ACC_X_1', 'FuncCov_peak_ACC_Y_1', 'FuncCov_peak_YAW_RATE_1', 'FuncCov_peak_SPEED_FL_1', 'FuncCov_peak_SPEED_FR_1', 'FuncCov_peak_SPEED_RL_1', 'FuncCov_peak_SPEED_RR_1', 'FuncCov_loc_ACC_X_1', 'FuncCov_loc_ACC_Y_1', 'FuncCov_loc_YAW_RATE_1', 'FuncCov_loc_SPEED_FL_1', 'FuncCov_loc_SPEED_FR_1', 'FuncCov_loc_SPEED_RL_1', 'FuncCov_loc_SPEED_RR_1', 'FuncCovPower_ACC_X_1', 'FuncCovPower_ACC_Y_1', 'FuncCovPower_YAW_RATE_1', 'FuncCovPower_SPEED_FL_1', 'FuncCovPower_SPEED_FR_1', 'FuncCovPower_SPEED_RL_1', 'FuncCovPower_SPEED_RR_1', 'FuncDiscrPower_ACC_X_1', 'FuncDiscrPower_ACC_Y_1', 'FuncDiscrPower_YAW_RATE_1', 'FuncDiscrPower_SPEED_FL_1', 'FuncDiscrPower_SPEED_FR_1', 'FuncDiscrPower_SPEED_RL_1', 'FuncDiscrPower_SPEED_RR_1', 'FuncEigFilter_peak_ACC_X_1', 'FuncEigFilter_peak_ACC_Y_1', 'FuncEigFilter_peak_YAW_RATE_1', 'FuncEigFilter_peak_SPEED_FL_1', 'FuncEigFilter_peak_SPEED_FR_1', 'FuncEigFilter_peak_SPEED_RL_1', 'FuncEigFilter_peak_SPEED_RR_1', 'FuncEigFilter_loc_ACC_X_1', 'FuncEigFilter_loc_ACC_Y_1', 'FuncEigFilter_loc_YAW_RATE_1', 'FuncEigFilter_loc_SPEED_FL_1', 'FuncEigFilter_loc_SPEED_FR_1', 'FuncEigFilter_loc_SPEED_RL_1', 'FuncEigFilter_loc_SPEED_RR_1', 'FuncEigFilter2_peak_ACC_X_1', 'FuncEigFilter2_peak_ACC_Y_1', 'FuncEigFilter2_peak_YAW_RATE_1', 'FuncEigFilter2_peak_SPEED_FL_1', 'FuncEigFilter2_peak_SPEED_FR_1', 'FuncEigFilter2_peak_SPEED_RL_1', 'FuncEigFilter2_peak_SPEED_RR_1', 'FuncEigFilter2_loc_ACC_X_1', 'FuncEigFilter2_loc_ACC_Y_1', 'FuncEigFilter2_loc_YAW_RATE_1', 'FuncEigFilter2_loc_SPEED_FL_1', 'FuncEigFilter2_loc_SPEED_FR_1', 'FuncEigFilter2_loc_SPEED_RL_1', 'FuncEigFilter2_loc_SPEED_RR_1', 'FuncEigNorm_ACC_X_1', 'FuncEigNorm_ACC_Y_1', 'FuncEigNorm_YAW_RATE_1', 'FuncEigNorm_SPEED_FL_1', 'FuncEigNorm_SPEED_FR_1', 'FuncEigNorm_SPEED_RL_1', 'FuncEigNorm_SPEED_RR_1', 'FuncAbsSumChanges_ACC_X_1', 'FuncAbsSumChanges_ACC_Y_1', 'FuncAbsSumChanges_YAW_RATE_1', 'FuncAbsSumChanges_SPEED_FL_1', 'FuncAbsSumChanges_SPEED_FR_1', 'FuncAbsSumChanges_SPEED_RL_1', 'FuncAbsSumChanges_SPEED_RR_1', 'FuncCorCoeff_ACC_X_ACC_Y_1', 'FuncCorCoeff_ACC_X_YAW_RATE_1', 'FuncCorCoeff_ACC_X_SPEED_FL_1', 'FuncCorCoeff_ACC_X_SPEED_FR_1', 'FuncCorCoeff_ACC_X_SPEED_RL_1', 'FuncCorCoeff_ACC_X_SPEED_RR_1', 'FuncCorCoeff_ACC_Y_YAW_RATE_1', 'FuncCorCoeff_ACC_Y_SPEED_FL_1', 'FuncCorCoeff_ACC_Y_SPEED_FR_1', 'FuncCorCoeff_ACC_Y_SPEED_RL_1', 'FuncCorCoeff_ACC_Y_SPEED_RR_1', 'FuncCorCoeff_YAW_RATE_SPEED_FL_1', 'FuncCorCoeff_YAW_RATE_SPEED_FR_1', 'FuncCorCoeff_YAW_RATE_SPEED_RL_1', 'FuncCorCoeff_YAW_RATE_SPEED_RR_1', 'FuncCorCoeff_SPEED_FL_SPEED_FR_1', 'FuncCorCoeff_SPEED_FL_SPEED_RL_1', 'FuncCorCoeff_SPEED_FL_SPEED_RR_1', 'FuncCorCoeff_SPEED_FR_SPEED_RL_1', 'FuncCorCoeff_SPEED_FR_SPEED_RR_1', 'FuncCorCoeff_SPEED_RL_SPEED_RR_1', 'FuncCrest_ACC_X_1', 'FuncCrest_ACC_Y_1', 'FuncCrest_YAW_RATE_1', 'FuncCrest_SPEED_FL_1', 'FuncCrest_SPEED_FR_1', 'FuncCrest_SPEED_RL_1', 'FuncCrest_SPEED_RR_1', 'FuncNorm_ACC_X_1', 'FuncNorm_ACC_Y_1', 'FuncNorm_YAW_RATE_1', 'FuncNorm_SPEED_FL_1', 'FuncNorm_SPEED_FR_1', 'FuncNorm_SPEED_RL_1', 'FuncNorm_SPEED_RR_1', 'FuncRange_ACC_X_1', 'FuncRange_ACC_Y_1', 'FuncRange_YAW_RATE_1', 'FuncRange_SPEED_FL_1', 'FuncRange_SPEED_FR_1', 'FuncRange_SPEED_RL_1', 'FuncRange_SPEED_RR_1', 'FuncComplTimeSeries_ACC_X_1', 'FuncComplTimeSeries_ACC_Y_1', 'FuncComplTimeSeries_YAW_RATE_1', 'FuncComplTimeSeries_SPEED_FL_1', 'FuncComplTimeSeries_SPEED_FR_1', 'FuncComplTimeSeries_SPEED_RL_1', 'FuncComplTimeSeries_SPEED_RR_1', 'FuncSVD_raw_1', 'FuncSVD_raw_2', 'FuncSVD_raw_3', 'FuncSVD_raw_4', 'FuncSVD_raw_5', 'FuncSVD_raw_6', 'FuncSVD_raw_7', 'FuncSVD_norm_1', 'FuncSVD_norm_2', 'FuncSVD_norm_3', 'FuncSVD_norm_4', 'FuncSVD_norm_5', 'FuncSVD_norm_6', 'FuncSVD_norm_7', 'FuncSampEntr_ACC_X_1', 'FuncSampEntr_ACC_Y_1', 'FuncSampEntr_YAW_RATE_1', 'FuncSampEntr_SPEED_FL_1', 'FuncSampEntr_SPEED_FR_1', 'FuncSampEntr_SPEED_RL_1', 'FuncSampEntr_SPEED_RR_1', 'FuncLogEnEntr_ACC_X_1', 'FuncLogEnEntr_ACC_Y_1', 'FuncLogEnEntr_YAW_RATE_1', 'FuncLogEnEntr_SPEED_FL_1', 'FuncLogEnEntr_SPEED_FR_1', 'FuncLogEnEntr_SPEED_RL_1', 'FuncLogEnEntr_SPEED_RR_1', 'FuncMeanFreq_ACC_X_1', 'FuncMeanFreq_ACC_Y_1', 'FuncMeanFreq_YAW_RATE_1', 'FuncMeanFreq_SPEED_FL_1', 'FuncMeanFreq_SPEED_FR_1', 'FuncMeanFreq_SPEED_RL_1', 'FuncMeanFreq_SPEED_RR_1', 'FuncBandpower_1_5_ACC_X_1', 'FuncBandpower_1_5_ACC_Y_1', 'FuncBandpower_1_5_YAW_RATE_1', 'FuncBandpower_1_5_SPEED_FL_1', 'FuncBandpower_1_5_SPEED_FR_1', 'FuncBandpower_1_5_SPEED_RL_1', 'FuncBandpower_1_5_SPEED_RR_1', 'FuncBandpower_5_10_ACC_X_1', 'FuncBandpower_5_10_ACC_Y_1', 'FuncBandpower_5_10_YAW_RATE_1', 'FuncBandpower_5_10_SPEED_FL_1', 'FuncBandpower_5_10_SPEED_FR_1', 'FuncBandpower_5_10_SPEED_RL_1', 'FuncBandpower_5_10_SPEED_RR_1', 'FuncBandpower_10_15_ACC_X_1', 'FuncBandpower_10_15_ACC_Y_1', 'FuncBandpower_10_15_YAW_RATE_1', 'FuncBandpower_10_15_SPEED_FL_1', 'FuncBandpower_10_15_SPEED_FR_1', 'FuncBandpower_10_15_SPEED_RL_1', 'FuncBandpower_10_15_SPEED_RR_1', 'FuncBandpower_15_20_ACC_X_1', 'FuncBandpower_15_20_ACC_Y_1', 'FuncBandpower_15_20_YAW_RATE_1', 'FuncBandpower_15_20_SPEED_FL_1', 'FuncBandpower_15_20_SPEED_FR_1', 'FuncBandpower_15_20_SPEED_RL_1', 'FuncBandpower_15_20_SPEED_RR_1', 'FuncBandpower_20_25_ACC_X_1', 'FuncBandpower_20_25_ACC_Y_1', 'FuncBandpower_20_25_YAW_RATE_1', 'FuncBandpower_20_25_SPEED_FL_1', 'FuncBandpower_20_25_SPEED_FR_1', 'FuncBandpower_20_25_SPEED_RL_1', 'FuncBandpower_20_25_SPEED_RR_1'};
% trainedClassifier.ClassificationEnsemble = classificationEnsemble;
% trainedClassifier.About = 'This struct is a trained model exported from Classification Learner R2018b.';
% trainedClassifier.HowToPredict = sprintf('To make predictions on a new table, T, use: \n  yfit = c.predictFcn(T) \nreplacing ''c'' with the name of the variable that is this struct, e.g. ''trainedModel''. \n \nThe table, T, must contain the variables returned by: \n  c.RequiredVariables \nVariable formats (e.g. matrix/vector, datatype) must match the original training data. \nAdditional variables are ignored. \n \nFor more information, see <a href="matlab:helpview(fullfile(docroot, ''stats'', ''stats.map''), ''appclassification_exportmodeltoworkspace'')">How to predict using an exported model</a>.');

% Extract predictors and response
% This code processes the data into the right shape for training the
% model.
% inputTable = trainingData;
% predictorNames = {'FuncStdv_ACC_X_1', 'FuncStdv_ACC_Y_1', 'FuncStdv_YAW_RATE_1', 'FuncStdv_SPEED_FL_1', 'FuncStdv_SPEED_FR_1', 'FuncStdv_SPEED_RL_1', 'FuncStdv_SPEED_RR_1', 'FuncARfit_ACC_X_1', 'FuncARfit_ACC_X_2', 'FuncARfit_ACC_X_3', 'FuncARfit_ACC_X_4', 'FuncARfit_ACC_X_5', 'FuncARfit_ACC_X_6', 'FuncARfit_ACC_X_7', 'FuncARfit_ACC_X_8', 'FuncARfit_ACC_X_9', 'FuncARfit_ACC_X_10', 'FuncARfit_ACC_X_11', 'FuncARfit_ACC_Y_1', 'FuncARfit_ACC_Y_2', 'FuncARfit_ACC_Y_3', 'FuncARfit_ACC_Y_4', 'FuncARfit_ACC_Y_5', 'FuncARfit_ACC_Y_6', 'FuncARfit_ACC_Y_7', 'FuncARfit_ACC_Y_8', 'FuncARfit_ACC_Y_9', 'FuncARfit_ACC_Y_10', 'FuncARfit_ACC_Y_11', 'FuncARfit_YAW_RATE_1', 'FuncARfit_YAW_RATE_2', 'FuncARfit_YAW_RATE_3', 'FuncARfit_YAW_RATE_4', 'FuncARfit_YAW_RATE_5', 'FuncARfit_YAW_RATE_6', 'FuncARfit_YAW_RATE_7', 'FuncARfit_YAW_RATE_8', 'FuncARfit_YAW_RATE_9', 'FuncARfit_YAW_RATE_10', 'FuncARfit_YAW_RATE_11', 'FuncARfit_SPEED_FL_1', 'FuncARfit_SPEED_FL_2', 'FuncARfit_SPEED_FL_3', 'FuncARfit_SPEED_FL_4', 'FuncARfit_SPEED_FL_5', 'FuncARfit_SPEED_FL_6', 'FuncARfit_SPEED_FL_7', 'FuncARfit_SPEED_FL_8', 'FuncARfit_SPEED_FL_9', 'FuncARfit_SPEED_FL_10', 'FuncARfit_SPEED_FL_11', 'FuncARfit_SPEED_FR_1', 'FuncARfit_SPEED_FR_2', 'FuncARfit_SPEED_FR_3', 'FuncARfit_SPEED_FR_4', 'FuncARfit_SPEED_FR_5', 'FuncARfit_SPEED_FR_6', 'FuncARfit_SPEED_FR_7', 'FuncARfit_SPEED_FR_8', 'FuncARfit_SPEED_FR_9', 'FuncARfit_SPEED_FR_10', 'FuncARfit_SPEED_FR_11', 'FuncARfit_SPEED_RL_1', 'FuncARfit_SPEED_RL_2', 'FuncARfit_SPEED_RL_3', 'FuncARfit_SPEED_RL_4', 'FuncARfit_SPEED_RL_5', 'FuncARfit_SPEED_RL_6', 'FuncARfit_SPEED_RL_7', 'FuncARfit_SPEED_RL_8', 'FuncARfit_SPEED_RL_9', 'FuncARfit_SPEED_RL_10', 'FuncARfit_SPEED_RL_11', 'FuncARfit_SPEED_RR_1', 'FuncARfit_SPEED_RR_2', 'FuncARfit_SPEED_RR_3', 'FuncARfit_SPEED_RR_4', 'FuncARfit_SPEED_RR_5', 'FuncARfit_SPEED_RR_6', 'FuncARfit_SPEED_RR_7', 'FuncARfit_SPEED_RR_8', 'FuncARfit_SPEED_RR_9', 'FuncARfit_SPEED_RR_10', 'FuncARfit_SPEED_RR_11', 'FuncAbsEnergyTime_ACC_X_1', 'FuncAbsEnergyTime_ACC_Y_1', 'FuncAbsEnergyTime_YAW_RATE_1', 'FuncAbsEnergyTime_SPEED_FL_1', 'FuncAbsEnergyTime_SPEED_FR_1', 'FuncAbsEnergyTime_SPEED_RL_1', 'FuncAbsEnergyTime_SPEED_RR_1', 'FuncSkewness_ACC_X_1', 'FuncSkewness_ACC_Y_1', 'FuncSkewness_YAW_RATE_1', 'FuncSkewness_SPEED_FL_1', 'FuncSkewness_SPEED_FR_1', 'FuncSkewness_SPEED_RL_1', 'FuncSkewness_SPEED_RR_1', 'FuncCov_peak_ACC_X_1', 'FuncCov_peak_ACC_Y_1', 'FuncCov_peak_YAW_RATE_1', 'FuncCov_peak_SPEED_FL_1', 'FuncCov_peak_SPEED_FR_1', 'FuncCov_peak_SPEED_RL_1', 'FuncCov_peak_SPEED_RR_1', 'FuncCov_loc_ACC_X_1', 'FuncCov_loc_ACC_Y_1', 'FuncCov_loc_YAW_RATE_1', 'FuncCov_loc_SPEED_FL_1', 'FuncCov_loc_SPEED_FR_1', 'FuncCov_loc_SPEED_RL_1', 'FuncCov_loc_SPEED_RR_1', 'FuncCovPower_ACC_X_1', 'FuncCovPower_ACC_Y_1', 'FuncCovPower_YAW_RATE_1', 'FuncCovPower_SPEED_FL_1', 'FuncCovPower_SPEED_FR_1', 'FuncCovPower_SPEED_RL_1', 'FuncCovPower_SPEED_RR_1', 'FuncDiscrPower_ACC_X_1', 'FuncDiscrPower_ACC_Y_1', 'FuncDiscrPower_YAW_RATE_1', 'FuncDiscrPower_SPEED_FL_1', 'FuncDiscrPower_SPEED_FR_1', 'FuncDiscrPower_SPEED_RL_1', 'FuncDiscrPower_SPEED_RR_1', 'FuncEigFilter_peak_ACC_X_1', 'FuncEigFilter_peak_ACC_Y_1', 'FuncEigFilter_peak_YAW_RATE_1', 'FuncEigFilter_peak_SPEED_FL_1', 'FuncEigFilter_peak_SPEED_FR_1', 'FuncEigFilter_peak_SPEED_RL_1', 'FuncEigFilter_peak_SPEED_RR_1', 'FuncEigFilter_loc_ACC_X_1', 'FuncEigFilter_loc_ACC_Y_1', 'FuncEigFilter_loc_YAW_RATE_1', 'FuncEigFilter_loc_SPEED_FL_1', 'FuncEigFilter_loc_SPEED_FR_1', 'FuncEigFilter_loc_SPEED_RL_1', 'FuncEigFilter_loc_SPEED_RR_1', 'FuncEigFilter2_peak_ACC_X_1', 'FuncEigFilter2_peak_ACC_Y_1', 'FuncEigFilter2_peak_YAW_RATE_1', 'FuncEigFilter2_peak_SPEED_FL_1', 'FuncEigFilter2_peak_SPEED_FR_1', 'FuncEigFilter2_peak_SPEED_RL_1', 'FuncEigFilter2_peak_SPEED_RR_1', 'FuncEigFilter2_loc_ACC_X_1', 'FuncEigFilter2_loc_ACC_Y_1', 'FuncEigFilter2_loc_YAW_RATE_1', 'FuncEigFilter2_loc_SPEED_FL_1', 'FuncEigFilter2_loc_SPEED_FR_1', 'FuncEigFilter2_loc_SPEED_RL_1', 'FuncEigFilter2_loc_SPEED_RR_1', 'FuncEigNorm_ACC_X_1', 'FuncEigNorm_ACC_Y_1', 'FuncEigNorm_YAW_RATE_1', 'FuncEigNorm_SPEED_FL_1', 'FuncEigNorm_SPEED_FR_1', 'FuncEigNorm_SPEED_RL_1', 'FuncEigNorm_SPEED_RR_1', 'FuncAbsSumChanges_ACC_X_1', 'FuncAbsSumChanges_ACC_Y_1', 'FuncAbsSumChanges_YAW_RATE_1', 'FuncAbsSumChanges_SPEED_FL_1', 'FuncAbsSumChanges_SPEED_FR_1', 'FuncAbsSumChanges_SPEED_RL_1', 'FuncAbsSumChanges_SPEED_RR_1', 'FuncCorCoeff_ACC_X_ACC_Y_1', 'FuncCorCoeff_ACC_X_YAW_RATE_1', 'FuncCorCoeff_ACC_X_SPEED_FL_1', 'FuncCorCoeff_ACC_X_SPEED_FR_1', 'FuncCorCoeff_ACC_X_SPEED_RL_1', 'FuncCorCoeff_ACC_X_SPEED_RR_1', 'FuncCorCoeff_ACC_Y_YAW_RATE_1', 'FuncCorCoeff_ACC_Y_SPEED_FL_1', 'FuncCorCoeff_ACC_Y_SPEED_FR_1', 'FuncCorCoeff_ACC_Y_SPEED_RL_1', 'FuncCorCoeff_ACC_Y_SPEED_RR_1', 'FuncCorCoeff_YAW_RATE_SPEED_FL_1', 'FuncCorCoeff_YAW_RATE_SPEED_FR_1', 'FuncCorCoeff_YAW_RATE_SPEED_RL_1', 'FuncCorCoeff_YAW_RATE_SPEED_RR_1', 'FuncCorCoeff_SPEED_FL_SPEED_FR_1', 'FuncCorCoeff_SPEED_FL_SPEED_RL_1', 'FuncCorCoeff_SPEED_FL_SPEED_RR_1', 'FuncCorCoeff_SPEED_FR_SPEED_RL_1', 'FuncCorCoeff_SPEED_FR_SPEED_RR_1', 'FuncCorCoeff_SPEED_RL_SPEED_RR_1', 'FuncCrest_ACC_X_1', 'FuncCrest_ACC_Y_1', 'FuncCrest_YAW_RATE_1', 'FuncCrest_SPEED_FL_1', 'FuncCrest_SPEED_FR_1', 'FuncCrest_SPEED_RL_1', 'FuncCrest_SPEED_RR_1', 'FuncNorm_ACC_X_1', 'FuncNorm_ACC_Y_1', 'FuncNorm_YAW_RATE_1', 'FuncNorm_SPEED_FL_1', 'FuncNorm_SPEED_FR_1', 'FuncNorm_SPEED_RL_1', 'FuncNorm_SPEED_RR_1', 'FuncRange_ACC_X_1', 'FuncRange_ACC_Y_1', 'FuncRange_YAW_RATE_1', 'FuncRange_SPEED_FL_1', 'FuncRange_SPEED_FR_1', 'FuncRange_SPEED_RL_1', 'FuncRange_SPEED_RR_1', 'FuncComplTimeSeries_ACC_X_1', 'FuncComplTimeSeries_ACC_Y_1', 'FuncComplTimeSeries_YAW_RATE_1', 'FuncComplTimeSeries_SPEED_FL_1', 'FuncComplTimeSeries_SPEED_FR_1', 'FuncComplTimeSeries_SPEED_RL_1', 'FuncComplTimeSeries_SPEED_RR_1', 'FuncSVD_raw_1', 'FuncSVD_raw_2', 'FuncSVD_raw_3', 'FuncSVD_raw_4', 'FuncSVD_raw_5', 'FuncSVD_raw_6', 'FuncSVD_raw_7', 'FuncSVD_norm_1', 'FuncSVD_norm_2', 'FuncSVD_norm_3', 'FuncSVD_norm_4', 'FuncSVD_norm_5', 'FuncSVD_norm_6', 'FuncSVD_norm_7', 'FuncSampEntr_ACC_X_1', 'FuncSampEntr_ACC_Y_1', 'FuncSampEntr_YAW_RATE_1', 'FuncSampEntr_SPEED_FL_1', 'FuncSampEntr_SPEED_FR_1', 'FuncSampEntr_SPEED_RL_1', 'FuncSampEntr_SPEED_RR_1', 'FuncLogEnEntr_ACC_X_1', 'FuncLogEnEntr_ACC_Y_1', 'FuncLogEnEntr_YAW_RATE_1', 'FuncLogEnEntr_SPEED_FL_1', 'FuncLogEnEntr_SPEED_FR_1', 'FuncLogEnEntr_SPEED_RL_1', 'FuncLogEnEntr_SPEED_RR_1', 'FuncMeanFreq_ACC_X_1', 'FuncMeanFreq_ACC_Y_1', 'FuncMeanFreq_YAW_RATE_1', 'FuncMeanFreq_SPEED_FL_1', 'FuncMeanFreq_SPEED_FR_1', 'FuncMeanFreq_SPEED_RL_1', 'FuncMeanFreq_SPEED_RR_1', 'FuncBandpower_1_5_ACC_X_1', 'FuncBandpower_1_5_ACC_Y_1', 'FuncBandpower_1_5_YAW_RATE_1', 'FuncBandpower_1_5_SPEED_FL_1', 'FuncBandpower_1_5_SPEED_FR_1', 'FuncBandpower_1_5_SPEED_RL_1', 'FuncBandpower_1_5_SPEED_RR_1', 'FuncBandpower_5_10_ACC_X_1', 'FuncBandpower_5_10_ACC_Y_1', 'FuncBandpower_5_10_YAW_RATE_1', 'FuncBandpower_5_10_SPEED_FL_1', 'FuncBandpower_5_10_SPEED_FR_1', 'FuncBandpower_5_10_SPEED_RL_1', 'FuncBandpower_5_10_SPEED_RR_1', 'FuncBandpower_10_15_ACC_X_1', 'FuncBandpower_10_15_ACC_Y_1', 'FuncBandpower_10_15_YAW_RATE_1', 'FuncBandpower_10_15_SPEED_FL_1', 'FuncBandpower_10_15_SPEED_FR_1', 'FuncBandpower_10_15_SPEED_RL_1', 'FuncBandpower_10_15_SPEED_RR_1', 'FuncBandpower_15_20_ACC_X_1', 'FuncBandpower_15_20_ACC_Y_1', 'FuncBandpower_15_20_YAW_RATE_1', 'FuncBandpower_15_20_SPEED_FL_1', 'FuncBandpower_15_20_SPEED_FR_1', 'FuncBandpower_15_20_SPEED_RL_1', 'FuncBandpower_15_20_SPEED_RR_1', 'FuncBandpower_20_25_ACC_X_1', 'FuncBandpower_20_25_ACC_Y_1', 'FuncBandpower_20_25_YAW_RATE_1', 'FuncBandpower_20_25_SPEED_FL_1', 'FuncBandpower_20_25_SPEED_FR_1', 'FuncBandpower_20_25_SPEED_RL_1', 'FuncBandpower_20_25_SPEED_RR_1'};
% predictors = inputTable(:, predictorNames);
% response = inputTable.Label;
% isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];
% 
% % Set up holdout validation
% cvp = cvpartition(response, 'Holdout', 0.25);
% trainingPredictors = predictors(cvp.training, :);
% trainingResponse = response(cvp.training, :);
% trainingIsCategoricalPredictor = isCategoricalPredictor;
% 
% % Train a classifier
% % This code specifies all the classifier options and trains the classifier.
% template = templateTree(...
%     'MaxNumSplits', 20);
% classificationEnsemble = fitcensemble(...
%     trainingPredictors, ...
%     trainingResponse, ...
%     'Method', 'AdaBoostM2', ...
%     'NumLearningCycles', 30, ...
%     'Learners', template, ...
%     'LearnRate', 0.1, ...
%     'ClassNames', {'FLDamperDefect'; 'RRDamperDefect'; 'RRSpringPlus16_4PercStiffness'; 'RRSpringPlus5_8PercStiffness'; 'allDampersDefect'; 'passiveIntact'});
% 
% % Create the result struct with predict function
% ensemblePredictFcn = @(x) predict(classificationEnsemble, x);
% validationPredictFcn = @(x) ensemblePredictFcn(x);
% 
% % Add additional fields to the result struct
% 
% 
% % Compute validation predictions
% validationPredictors = predictors(cvp.test, :);
% validationResponse = response(cvp.test, :);
% [validationPredictions, validationScores] = validationPredictFcn(validationPredictors);
% 
% % Compute validation accuracy
% correctPredictions = strcmp( strtrim(validationPredictions), strtrim(validationResponse));
% isMissing = cellfun(@(x) all(isspace(x)), validationResponse, 'UniformOutput', true);
% correctPredictions = correctPredictions(~isMissing);
% validationAccuracy = sum(correctPredictions)/length(correctPredictions);
